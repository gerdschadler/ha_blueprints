
blueprint:
  name: New Import Garbage Collection from txt
  description: >-
    Import dates from a txt file containing colection dates, one date per line.
    To read the file, you will need to create a `command_line` sensor reading the file content.
  domain: automation
  source_url: 
  input:
    garbage_collection_entity:
      name: Garbage Collection Entity
      description: Triggered by the event for this entity.
      selector:
        entity:
          integration: garbage_collection
    import:
      name: Command Line sensor reading the file
      description: >-
        To import dates from the file /share/import.txt, create the sensor with `command: "cat /share/import.txt"`.
        Then, create a `blank` garbage_collection entity configured with `manual_update`,
        and configure an automation with this blueprint to link the two entities.
      selector:
        entity:
          integration: sensor
mode: parallel
trigger:
  - platform: event
    event_type: garbage_collection_loaded
    event_data:
      entity_id: !input garbage_collection_entity
action:
  - repeat:
      count: "{{ states(import).split('\n') | count }}"
      sequence:
        - service: garbage_collection.add_date
          data:
            entity_id: "{{ trigger.event.data.entity_id }}"
            date: "{{ states(import).split('\n')[repeat.index-1] }}"
  - service: garbage_collection.update_state
    data:
      entity_id: "{{ trigger.event.data.entity_id }}"